[include mainsail.cfg]
[include V0Display.cfg]
[include stealthburnerLED.cfg]
[exclude_object]
[pause_resume]

[mcu]
serial: /dev/ttyS0
restart_method: command

[mcu host]
serial: /tmp/klipper_host_mcu

[mcu EBB36]
canbus_uuid: 6573ff746047

[virtual_sdcard]
path: ~/printer_data/gcodes

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 8000
max_z_velocity: 5
max_z_accel: 100

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

########################################
# LED
########################################
[neopixel rainbowAndBed]
pin: gpio24
chain_count: 21
color_order: GRB
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1

# refer to stealthburnerLED.cfg for toolhead rgb

########################################
# BED
########################################
[heater_bed]
heater_pin: gpio21
sensor_pin: gpio26
sensor_type: ATC Semitec 104GT-2
smooth_time: 3.0
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 57.532
#pid_ki: 2.143
#pid_kd: 386.181
min_temp: 0
max_temp: 115
max_power: 1.0

[bed_screws]
screw1: 59, 1
screw2: 4, 111
screw3: 114, 111


########################################
# FANs and TEMP
########################################
[fan]
pin: EBB36:PA0
max_power: 1.0
kick_start_time: 0                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

# [fan_generic nevermore_fan]
# pin: expander:PA0
# max_power: 1.0
# kick_start_time: 0.5
# off_below: 0.13

[heater_fan hotend_fan]
pin: EBB36:PA1
max_power: 1.0
kick_start_time: 0
heater: extruder
heater_temp: 50.0

[temperature_sensor BTT_PI]
sensor_type: temperature_host

[temperature_fan MCU_fan]   #Electrical bin cooling fan
pin: gpio20               
kick_start_time: 0.500
sensor_type: temperature_mcu
control: watermark
target_temp: 45.0
min_temp: 0
max_temp: 100
max_speed: 1.0
min_speed: 0.6

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: gpio27
min_temp: 0
max_temp: 100
gcode_id: C


########################################
# Steppers
########################################
[stepper_x]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio11
dir_pin: !gpio10      
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_min: 0
position_max: 120
homing_speed: 20                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 0
homing_positive_dir: true


[stepper_y]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio6
dir_pin: !gpio5      
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 3
position_endstop: 120
position_max: 120
homing_speed: 20                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 0
homing_positive_dir: true


[stepper_z]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio19
dir_pin: !gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^gpio25
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 120
second_homing_speed: 3.0
homing_retract_dist: 3.0


[extruder]
step_pin: EBB36:PD0
dir_pin: !EBB36:PD1                                                     # Add ! if moving opposite direction
enable_pin: !EBB36:PD2
microsteps: 32
rotation_distance: 22.2
gear_ratio: 50:10   
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBB36:PB13
sensor_type: PT1000
sensor_pin: EBB36:PA3
pullup_resistor: 2200 
control: pid
pid_kp: 36.574
pid_ki: 3.810
pid_kd: 87.779
min_extrude_temp: 170
min_temp: 0
max_temp: 350
min_extrude_temp: 10
step_pulse_duration: 0.000004


########################################
# TMC2209
########################################

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
run_current: 0.6            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                           # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio4    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 60                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later


[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
run_current: 0.6            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                           # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio3    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 60                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: EBB36:PA15
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

########################################
# Tuning
########################################

[input_shaper]
shaper_freq_x: 69
shaper_type_x: mzv
shaper_freq_y: 76
shaper_type_y: mzv

[adxl345]
cs_pin: EBB36: PB12
spi_software_sclk_pin: EBB36: PB10
spi_software_mosi_pin: EBB36: PB11
spi_software_miso_pin: EBB36: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    55, 55, 20  # an example


#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

#[safe_z_home]
##home_xy_position: 120,120 										# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right


#####################################################################
# Macros
#####################################################################

[gcode_macro M204]
rename_existing: M204.0
variable_accel_to_decel_factor: 0.5
gcode:
    {% set vars = printer["gcode_macro M204"] %}
    {% if params.S is defined %}
    {% set accel = params.S|float %}
    {% set accel_to_decel = accel * vars.accel_to_decel_factor %}
    SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
    {% endif %}

# Set pressure advance
[gcode_macro SET_MATERIAL]
description: Set values based on material type
gcode:
  {% set MATERIAL = printer["gcode_macro PRINT_START"].material|string %} ; Get material type from variable
  # SET_GCODE_VARIABLE MACRO=SET_MATERIAL VARIABLE=material VALUE='"{MATERIAL}'" ; Save the material type to a variable just because
  {% if MATERIAL == 'PLA' %} ; If material type is PLA
    RESPOND MSG='Printing in PLA'
    SET_PRESSURE_ADVANCE ADVANCE=0
  {% elif MATERIAL == 'PET' %} ; If material type is PETG
    RESPOND MSG='Printing in PETG'
    SET_PRESSURE_ADVANCE ADVANCE=0
  {% elif MATERIAL == 'ABS' %} ; If material type is ABS
    RESPOND MSG='Printing in ABS'
    SET_PRESSURE_ADVANCE ADVANCE=0.034
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0 ; Turn on nevermore fan if printing abs
  {% else %}
    PRINT_END
  {% endif %}


# Print start  
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
description: start
variable_material: ''
gcode:
    {% set material = params.MATERIAL %}
    {% set bed_temperature = params.BED_TEMP %}
    {% set extruder_temperature = params.EXTRUDER_TEMP %}

    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=material VALUE='"{material}"' ; Get material type from slicer
    # SET_PIN PIN=HE-LED VALUE=1.00 ; turn on leds
    
    M140 S{bed_temperature} ; set bed temp

    G90 ; absolute position
    M107 ; fans off
    M82 ; e absolute
    G28 ; home all axis
    
    M104 S150 ; set temporary nozzle temperature to prevent oozing
    M190 S{bed_temperature} ; wait for bed temperature
    M109 S{extruder_temperature} ; wait for nozzle temperature
    SET_MATERIAL ; Set correct pressure advance and turn on nevermore if printing abs
    
    G92 E0
    G1 X90 Y3.2 F2000
    G1 Z0.28 F400
    G1 X10 Y3.2 E18 F1000
    G1 Z0.5 F200
    G92 E0

# Print end
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    # Turn off bed, extruder, and fan
    TURN_OFF_HEATERS
    M107
    
    {% set x = params.X|default(115) %}      #edit to your park position
    {% set y = params.Y|default(115) %}      #edit to your park position
    {% set z = params.Z|default(20)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000

    # SET_PIN PIN=HE-LED VALUE=0.00
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0

[gcode_macro SHUTDOWN]
gcode:
  {action_call_remote_method("shutdown_machine")}

[display_status]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    # SDCARD_RESET_FILE
    # SET_PIN PIN=HE-LED VALUE=0.00
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(115) %}      #edit to your park position
    {% set y = params.Y|default(115) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[gcode_macro PID_Tune_Bed]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=100

[gcode_macro PID_Tune_Hotend]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=240

[gcode_macro STOP_LED]
gcode:
    STOP_LED_EFFECTS

[gcode_macro Rainbow_LED]
gcode:
    SET_LED_EFFECT EFFECT=panel_idle

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 120   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 120   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 600   ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# !!! Custom macros, please use with care and review the section of the corresponding macro.
# These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 116.470
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 58.677
#*# pid_ki = 2.149
#*# pid_kd = 400.472
#*#
#*# [extruder]
